请将提供的小说文本转换为专门用于 index-tts v2 引擎的有声书JSON格式。必须严格遵循以下所有规范和原则。
核心概念：情感向量 (emo_vector)
此引擎使用一个包含8个浮点数的数组来精确控制情感。
向量顺序（固定）: [喜, 怒, 哀, 惧, 厌恶, 低落, 惊喜, 平静]
核心原则: 默认情感为 完全中性 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]。只在绝对必要时，才对情感向量进行微调。
数值上限: 任何单个情感权重值不得超过 0.3。
一、输出格式与字段规范
总格式: 输出必须是一个有效的JSON数组 [...]。
对象字段: 每个对象必须且只能包含以下四个字段：
speaker: 字符串，说话者姓名 (如 "旁白", "角色名")。
content: 字符串，对话或旁白内容。
emo_vector: 数组，包含8个浮点数。
delay: 整数，该语音结束后的停顿时间（毫秒）。
二、情感向量 (emo_vector) 赋值核心原则
原则: 旁白必须是完全中性的讲述者，不携带任何情感、氛围或倾向。
赋值方法: 固定且唯一地使用零向量。
标准值: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
原则: 以“零向量”为基准，遵循“非必要，不调整”的极简主义。情感赋值必须基于深度的上下文分析（黄金标准），但表现形式上必须极度克制。
赋值方法:
默认状态: 角色的 emo_vector 默认为 [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]。
调整前提: 只有当角色的情绪通过上下文（如角色关系、处境、对话目的等）表现出明确且必要的情感倾向时，才进行调整。
调整方式:
优先单一情感: 尽量只调整一个最核心的情感值（例如，表达悲伤时只调整“哀”）。
审慎组合: 仅在角色情感确实是复杂交织（如讽刺、强颜欢笑）且不可用单一情感表达时，才组合两个情感值。
保持轻微: 所有调整值必须是轻情绪，最大值为 0.3。
三、内容处理与技术要求
长段落拆分:
任何超过100个字的段落必须被拆分。
拆分点应在自然的停顿处（如句号、逗号后），确保每段在80-100字以内。
重要: 由同一个长段落拆分出的所有片段，其 speaker 和 emo_vector 必须完全相同。
内容与标点:
content 字段中只保留 ，、、、。、！、？ 和 ... 这几种标点符号。
原文中的所有英文引号 " 必须在JSON中转义为 \"。
停顿 (delay):
旁白 delay 通常在 300-800ms。
角色对话 delay 通常在 400-1500ms。
在情感转折、关键信息揭示或戏剧性停顿处，应设置更长的 delay 值（例如 1200ms 以上）。
格式纯洁性:
不要添加任何规定之外的字段或注释。输出必须是纯净、可被程序直接解析的JSON。
模板示例 (已按最终版新规修订)
code
JSON
[
  {
    "speaker": "旁白",
    "content": "夜色如墨，冷雨敲打着窗棂，房间里唯一的光源来自桌上那盏昏黄的台灯。",
    "emo_vector": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    "delay": 800
  },
  {
    "speaker": "李昂",
    "content": "他们...真的都走了吗？",
    "emo_vector": [0.0, 0.0, 0.3, 0.0, 0.0, 0.0, 0.0, 0.0],
    "delay": 1200
  },
  {
    "speaker": "旁白",
    "content": "他的声音在空旷的房间里显得格外沙哑和无力，仿佛每一个字都耗尽了全身的力气。",
    "emo_vector": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    "delay": 700
  },
  {
    "speaker": "神秘人",
    "content": "别担心，我们很快就会再见面的。",
    "emo_vector": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
    "delay": 900
  }
]